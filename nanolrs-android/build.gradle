
apply plugin: 'com.android.library'
apply plugin: "jacoco"
apply plugin: 'maven-publish'


android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "TESTUSER", "\"" + rootProject.ext.testUser + "\""
        buildConfigField "String", "TESTPASSWORD", "\"" + rootProject.ext.testPassword + "\""
        buildConfigField "String", "TESTLRSENDPOINT", "\"" + rootProject.ext.testLrsEndpoint + "\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled = true
        }
    }

    lintOptions {
        abortOnError false
    }
}




dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test:runner:0.4'
    compile 'com.android.support:appcompat-v7:25.1.0'
    compile 'com.android.support:support-v4:25.1.0'
    compile project(":nanolrs-ormlite")
    compile project(":nanolrs-http")
    androidTestCompile project(":nanolrs-core-tests")
    compile "com.j256.ormlite:ormlite-android:5.0"
}


task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "source"
}

publishing {
    publications {

        //Taken from: http://stackoverflow.com/questions/26874498/maven-publish-android-library-with-aar-and-source-jar

        nanolrsandroid(MavenPublication) {
            groupId 'com.ustadmobile.nanolrs'
            artifactId 'nanolrs-android'
            version rootProject.ext.nanolrsversion
            artifact(sourceJar)
            artifact("$buildDir/outputs/aar/nanolrs-android-release.aar")

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    if(it.group != null && (it.name != null || "unspecified".equals(it.name)) && it.version != null)
                    {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        if(it.group.equals("workspace") || it.group.equals("NanoLRS")) {
                            dependencyNode.appendNode('groupId', "com.ustadmobile.nanolrs")
                        }else {
                            dependencyNode.appendNode('groupId', it.group)
                        }
                        
                        dependencyNode.appendNode('artifactId', it.name)
                        if(it.version.equals("unspecified")) {
                            dependencyNode.appendNode('version', rootProject.ext.nanolrsversion)
                        }else {
                            dependencyNode.appendNode('version', it.version)
                        }

                    }
                }
            }

        }
    }
    repositories {
        //Set this in projectdir/extrasettings.gradle
        maven {
            url rootProject.ext.repoDir
        }
    }
}
